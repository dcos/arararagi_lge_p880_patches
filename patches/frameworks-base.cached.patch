diff --git a/core/java/android/provider/Settings.java b/core/java/android/provider/Settings.java
index 5675dd2..2ae99ea 100644
--- a/core/java/android/provider/Settings.java
+++ b/core/java/android/provider/Settings.java
@@ -2819,6 +2819,12 @@ public final class Settings {
         public static final String MENU_UNLOCK_SCREEN = "menu_unlock_screen";
 
         /**
+         * Preference for the button backlight. The value is enum (0 for on touch, 1 for
+         * off, 2 for on, 3 for force off, 4 for force on).
+         */
+        public static final String BUTTON_BACKLIGHT_MODE = "button_backlight_mode";
+
+        /**
          * Whether to wake the screen with the volume keys, the value is boolean.
          * @hide
          */
diff --git a/policy/src/com/android/internal/policy/impl/PhoneWindowManager.java b/policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
index b7fa3ef..9ddf461 100644
--- a/policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
+++ b/policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
@@ -896,21 +896,7 @@ public class PhoneWindowManager implements WindowManagerPolicy {
 
     private final Runnable mRingerChordLongPress = new Runnable() {
         public void run() {
-            // Do the switch
-            final AudioManager am = (AudioManager)mContext.getSystemService(Context.AUDIO_SERVICE);
-            final int ringerMode = am.getRingerMode();
-            final VolumePanel volumePanel = new VolumePanel(ThemeUtils.createUiContext(mContext),
-                                                              (AudioService) getAudioService());
-            if (ringerMode == AudioManager.RINGER_MODE_NORMAL) {
-                boolean vibrateSetting = Settings.System.getInt(mContext.getContentResolver(),
-                                           Settings.System.VIBRATE_WHEN_RINGING, 0) != 0;
-                am.setRingerMode(vibrateSetting ? AudioManager.RINGER_MODE_VIBRATE :
-                                   AudioManager.RINGER_MODE_SILENT);
-            } else {
-                am.setRingerMode(AudioManager.RINGER_MODE_NORMAL);
-            }
-            volumePanel.postVolumeChanged(AudioManager.STREAM_RING,AudioManager.FLAG_SHOW_UI
-                                          | AudioManager.FLAG_VIBRATE);
+            mContext.sendBroadcast(new Intent("com.lge.QuickClip.action.START_QUICKCLIP"));
         }
     };
 
* Unmerged path services/java/com/android/server/power/PowerManagerService.java
